// src/types/global.d.ts

export {}; // This makes the file a module, which is required for 'declare global'.

/**
 * Defines the options for the Razorpay checkout form.
 */
interface RazorpayOptions {
  key: string; // Your public API key
  amount: number; // Amount in paise
  currency: string;
  name: string; // Your business name
  description?: string; // A description for the payment
  order_id: string; // The order ID generated by your backend
  handler: (response: {
    razorpay_payment_id: string;
    razorpay_order_id: string;
    razorpay_signature: string;
  }) => void; // Callback function on successful payment
  prefill: {
    name?: string;
    email?: string;
    contact?: string;
  };
  notes?: Record<string, string>;
  theme?: {
    color?: string;
  };
}

/**
 * Defines the Razorpay instance returned by the constructor.
 */
interface Razorpay {
  open(): void;
  on(event: 'payment.failed', callback: (response: any) => void): void;
}

declare global {
  interface Window {
    // Declares that the window object has a Razorpay property,
    // which is a class that can be instantiated with RazorpayOptions.
    Razorpay: new (options: RazorpayOptions) => Razorpay;
  }
}